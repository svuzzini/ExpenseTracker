version: '3.8'

services:
  expense-tracker:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: expense-tracker-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - expense_data:/app/data
      - expense_backups:/app/backups
    environment:
      - GIN_MODE=release
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - DB_PATH=/app/data/expense_tracker.db
      - BACKUP_ENABLED=true
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.expense-tracker.rule=Host(`expenses.yourdomain.com`)"
      - "traefik.http.routers.expense-tracker.tls=true"
      - "traefik.http.routers.expense-tracker.tls.certresolver=letsencrypt"
      - "traefik.http.services.expense-tracker.loadbalancer.server.port=8080"

  # Optional: Reverse proxy with automatic HTTPS
  traefik:
    image: traefik:v2.10
    container_name: expense-tracker-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/data
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@domain.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.yourdomain.com`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$10$$..."  # Generate with htpasswd

  # Optional: Database backup service
  backup:
    image: alpine:3.18
    container_name: expense-tracker-backup
    restart: unless-stopped
    volumes:
      - expense_data:/data:ro
      - expense_backups:/backups
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - BACKUP_RETENTION=30        # Keep 30 days of backups
    command: |
      sh -c '
        apk add --no-cache sqlite dcron
        echo "$${BACKUP_SCHEDULE} /backup.sh" | crontab -
        cat > /backup.sh << EOF
        #!/bin/sh
        DATE=$$(date +%Y%m%d_%H%M%S)
        sqlite3 /data/expense_tracker.db ".backup /backups/expense_tracker_$${DATE}.db"
        gzip /backups/expense_tracker_$${DATE}.db
        find /backups -name "*.gz" -mtime +$${BACKUP_RETENTION} -delete
        echo "Backup completed: expense_tracker_$${DATE}.db.gz"
        EOF
        chmod +x /backup.sh
        crond -f
      '

volumes:
  expense_data:
    driver: local
  expense_backups:
    driver: local
  traefik_data:
    driver: local

networks:
  default:
    name: expense-tracker-network
